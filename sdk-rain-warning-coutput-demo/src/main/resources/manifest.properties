#任务的名字
job.name=rain_warning_demo

#输入配置参数
input.queue.type=Kafka
#input.queue.servers=192.168.0.27:9092
input.queue.servers=172.30.1.193:9092,172.30.1.194:9092,172.30.13.179:9092
input.queue.group=group_source
input.queue.topic=data-platform-storage-1

#输入消息键反序列化类，键的类型固定为String
input.message.key.deserializer.class=com.yunli.bigdata.UTF8KeyDeserializer
#输入消息体反序列化类，本例是json
input.message.body.deserializer.class=com.yunli.bigdata.rain.formatter.RainDeserializer

#执行环境自定义args(filter、hasher和processor的args参数会传入此字典)，英文分号分割，如果有特殊字符请自行转义（英文分号和等号）
args=maxRainThreshold=3.5;password=yunli2@AUG;omysqlhost=172.30.13.179;omysqlport=3306;omysqlpassword=yunli2@AUG;omysqluser=root

#处理器定义（工作模式、实现类）
processor.work.mode=Compact
processor.class=com.yunli.bigdata.rain.process.WarnProcessor
processor.parallelism=1
# 定义flink对接source的并行度
input.parallelism=1


#输出配置参数

#输出消息键序列化类，键的类型固定为String
output.message.key.serializer.class=com.yunli.bigdata.UTF8KeySerializer
#输出消息体序列化类
output.message.body.serializer.class=com.yunli.bigdata.rain.formatter.WarnMessageSerializer